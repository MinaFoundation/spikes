---
# Source: nginx/templates/server-block-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sandbox-mainnet-uptime-service-backend-proxy-nginx-server-block
  namespace: "mainnet"
  labels:
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-15.1.1
    app.kubernetes.io/instance: sandbox-mainnet-uptime-service-backend-proxy
    app.kubernetes.io/managed-by: Helm
data:
  server-block.conf: |-
    server {
      listen 8081;
      location = /submit/stats {
        index nonexistent;
        autoindex on;
        proxy_pass http://payload-inspector-node-stats-collector.mainnet.svc.cluster.local:8080/submit/stats;
        proxy_set_header Host $http_host;
      }
      location = / {
        return 200 "OK";
      }
    }
---
# Source: nginx/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: sandbox-mainnet-uptime-service-backend-proxy-nginx
  namespace: "mainnet"
  labels:
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-15.1.1
    app.kubernetes.io/instance: sandbox-mainnet-uptime-service-backend-proxy
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 8081
      targetPort: http
  selector:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/instance: sandbox-mainnet-uptime-service-backend-proxy
---
# Source: nginx/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sandbox-mainnet-uptime-service-backend-proxy-nginx
  namespace: "mainnet"
  labels:
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-15.1.1
    app.kubernetes.io/instance: sandbox-mainnet-uptime-service-backend-proxy
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
      app.kubernetes.io/instance: sandbox-mainnet-uptime-service-backend-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx
        helm.sh/chart: nginx-15.1.1
        app.kubernetes.io/instance: sandbox-mainnet-uptime-service-backend-proxy
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/server-block-configuration: 9844e372998c0327ab18ce85789b1ddfe78b9da428ac9740c44cd1a3f8c71b6d
    spec:
      
      automountServiceAccountToken: false
      shareProcessNamespace: false
      serviceAccountName: default
      affinity:
        podAffinity:
          
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: nginx
                  app.kubernetes.io/instance: sandbox-mainnet-uptime-service-backend-proxy
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          
      hostNetwork: false
      hostIPC: false
      initContainers:
      containers:
        - name: nginx
          image: docker.io/bitnami/nginx:1.25.1-debian-11-r9
          imagePullPolicy: "IfNotPresent"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: NGINX_HTTP_PORT_NUMBER
              value: "8081"
          envFrom:
          ports:
            - name: http
              containerPort: 8081
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
            tcpSocket:
              port: http
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: nginx-server-block
              mountPath: /opt/bitnami/nginx/conf/server_blocks
      volumes:
        - name: nginx-server-block
          configMap:
            name: sandbox-mainnet-uptime-service-backend-proxy-nginx-server-block
---
# Source: nginx/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sandbox-mainnet-uptime-service-backend-proxy-nginx
  namespace: "mainnet"
  labels:
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-15.1.1
    app.kubernetes.io/instance: sandbox-mainnet-uptime-service-backend-proxy
    app.kubernetes.io/managed-by: Helm
  annotations:
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:673156464838:certificate/5432af1a-b331-4970-abf4-c168c5e69784
    alb.ingress.kubernetes.io/group.name: sandbox
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
    alb.ingress.kubernetes.io/load-balancer-attributes: routing.http.xff_header_processing.mode=append
    alb.ingress.kubernetes.io/preserve-client-ip: "true"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/target-type: ip
    external-dns.alpha.kubernetes.io/hostname: uptime-payload-inspector.minaprotocol.tools
    nginx.ingress.kubernetes.io/default-backend: sandbox-mainnet-uptime-service-backend-proxy
spec:
  ingressClassName: "alb"
  rules:
    - host: "uptime-payload-inspector.minaprotocol.tools"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sandbox-mainnet-uptime-service-backend-proxy-nginx
                port:
                  name: http

