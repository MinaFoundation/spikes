repositories:
- name: mina
  url: https://coda-charts.storage.googleapis.com
- name: bitnami
  url: https://charts.bitnami.com/bitnami

environments: 
  default: 
    values:
      - seed:
          walletPassword: ref+awssecrets://seed-1?region=us-west-2&mode=singleparam#/key-password
          libp2pPassword: ref+awssecrets://seed-1?region=us-west-2&mode=singleparam#/libp2p-password
          walletKey: ref+awssecrets://seed-1?region=us-west-2&mode=singleparam#/seed-1-key
          walletPub: ref+awssecrets://seed-1?region=us-west-2&mode=singleparam#/seed-1-key.pub
          discoveryLibp2p: ref+awssecrets://seed-1?region=us-west-2&mode=singleparam#/seed-1-libp2p
          discoveryLibp2pPeerid: ref+awssecrets://seed-1?region=us-west-2&mode=singleparam#/seed-1-libp2p.peerid
      - releases:
          archive:
            name: berkeley-mina-archive
            image: 2.0.0rampup6-4061884-bullseye
            postgresPassword: ref+awssecrets://berkeley.archive.postgres?region=us-west-2&mode=singleparam#/password
          daemon:
            name: berkeley-mina-daemon
            image: 2.0.0rampup6-4061884-bullseye-berkeley

---
releases:
- name: {{ .Values.releases.archive.name }}
  namespace: berkeley-archive-temp
  chart: git::ssh://git@github.com/MinaFoundation/helm-charts.git@mina-archive?ref=main
  version: 2.0.0
  values:
    - archive:
        testnet: berkeley
        initFromDump: true
        image: minaprotocol/mina-archive:{{ .Values.releases.archive.image }}
        ports:
          server: 3086
        metrics:
          enabled: true
    - postgresql:
        primary:
          service:
            type: LoadBalancer
            annotations:
              external-dns.alpha.kubernetes.io/hostname: berkeley-archive-temp.minaprotocol.network
              service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
              service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
              service.beta.kubernetes.io/aws-load-balancer-type: external

          initdb:
            password: {{ .Values.releases.archive.postgresPassword | fetchSecretValue }}
        auth:
          password: {{ .Values.releases.archive.postgresPassword | fetchSecretValue }}
          database: archive

- name: {{ .Values.releases.daemon.name }}
  namespace: berkeley-archive-temp
  chart: git::ssh://git@github.com/MinaFoundation/helm-charts.git@mina-daemon?ref=main
  version: 2.1.0
  needs:
    - {{ .Values.releases.archive.name }}
  values:
    - deployment:
        testnet: berkeley
        name: {{ .Values.releases.daemon.name }}
        image: minaprotocol/mina-daemon:{{ .Values.releases.daemon.image }}
        customEntrypoint:
          enabled: true
          entrypoint: "mina"
        peerListURL: "https://storage.googleapis.com/seed-lists/testworld-2-0_seeds.txt"
    - podAnnotations:
        karpenter.sh/do-not-evict: "true"
    - node:
        name: "node"
        role: "sandbox"
        replicas: 1
        exposeGraphql: true
        logLevel: Info
        fileLogLevel: Info
        metrics:
          enabled: true
        archive:
          enabled: true
          address: "{{ .Values.releases.archive.name }}:3086"
        libp2pKeys:
          enabled: true
          legacy: false
        walletKeys:
          enabled: false
        secrets:
          walletPassword: {{ .Values.seed.walletPassword | fetchSecretValue | quote }}
          libp2pPassword: {{ .Values.seed.libp2pPassword | fetchSecretValue | quote }}
          walletKey: {{ .Values.seed.walletKey | fetchSecretValue | quote }}
          walletPub: {{ .Values.seed.walletPub | fetchSecretValue | quote }}
          discoveryLibp2p: {{ .Values.seed.discoveryLibp2p | fetchSecretValue | quote }}
          discoveryLibp2pPeerid: {{ .Values.seed.discoveryLibp2pPeerid | fetchSecretValue | quote }}

    - service:
        type: LoadBalancer
        loadBalancerClass: service.k8s.aws/nlb
        annotations:
          external-dns.alpha.kubernetes.io/hostname: berkeley-archive-temp-gql.minaprotocol.network
          service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
          service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
          service.beta.kubernetes.io/aws-load-balancer-type: external

    - healthcheck:
        enabled: true
        failureThreshold: 60
        periodSeconds: 5
        initialDelaySeconds: 30
